[
 {
  "allow_comments": 0,
  "allow_delete": 0,
  "allow_edit": 0,
  "allow_incomplete": 0,
  "allow_multiple": 0,
  "allow_print": 0,
  "allowed_embedding_domains": null,
  "anonymous": 0,
  "apply_document_permissions": 0,
  "banner_image": null,
  "breadcrumbs": null,
  "button_label": "Save",
  "client_script": "const METHOD = 'test_task.api.dadata_get_data';\r\nconst FIELDS = {\r\n  designation: 'designation',\r\n  inn: 'inn',\r\n  kpp: 'kpp',\r\n  address: 'address'\r\n};\r\n\r\n// Простой debounce\r\nfunction debounce(fn, wait) {\r\n  let t;\r\n  return function (...args) {\r\n    clearTimeout(t);\r\n    t = setTimeout(() => fn.apply(this, args), wait);\r\n  };\r\n}\r\n\r\nfrappe.web_form.after_load = () => {\r\n  // attach Awesomplete к полю web form\r\n  function attachAutocomplete(fieldname, key) {\r\n    const wrap = document.querySelector(`[data-fieldname=\"${fieldname}\"]`);\r\n    if (!wrap) return;\r\n    const input = wrap.querySelector('input');\r\n    if (!input) return;\r\n\r\n    const aw = new Awesomplete(input, {\r\n      minChars: 2,\r\n      maxItems: 8,\r\n      autoFirst: true,\r\n      // Не фильтруем на клиенте только на сервере\r\n      filter: () => true,\r\n      sort: false\r\n    });\r\n    const cache = new Map();\r\n\r\n    input.addEventListener('input', debounce(async (e) => {\r\n      const q = (e.target.value || '').trim();\r\n      if (q.length < 2) { aw.list = []; return; }\r\n\r\n      try {\r\n        const { message } = await frappe.call({\r\n          method: METHOD,\r\n          args: { key, query: q }\r\n        });\r\n        const list = Array.isArray(message) ? message : [];\r\n\r\n        cache.clear();\r\n        aw.list = list.map(item => {\r\n          const label = `${item.designation || ''} — ${item.inn || ''}${item.kpp ? ' / ' + item.kpp : ''}`.trim();\r\n          cache.set(label, item);\r\n          return label;\r\n        });\r\n      } catch (err) {\r\n        console.error('suggest error', err);\r\n        aw.list = [];\r\n      }\r\n    }, 200));\r\n\r\n    input.addEventListener('awesomplete-selectcomplete', () => {\r\n      const picked = cache.get(input.value);\r\n      if (!picked) return;\r\n      frappe.web_form.set_value(FIELDS.designation, picked.designation || '');\r\n      frappe.web_form.set_value(FIELDS.inn, picked.inn || '');\r\n      frappe.web_form.set_value(FIELDS.kpp, picked.kpp || '');\r\n    });\r\n  }\r\n\r\n  // Подключаем подсказки: имя и ИНН\r\n  attachAutocomplete(FIELDS.designation, 'designation');\r\n  attachAutocomplete(FIELDS.inn, 'inn');\r\n\r\n  // Кнопка \"Получить адрес\" — тоже через get_data с key='get_address'\r\n  (function addGetAddressButton() {\r\n    const wrap = document.querySelector(`[data-fieldname=\"${FIELDS.address}\"]`);\r\n    if (!wrap) return;\r\n    const inputBox = wrap.querySelector('.control-input') || wrap;\r\n\r\n    const btn = document.createElement('button');\r\n    btn.type = 'button';\r\n    btn.className = 'btn btn-sm btn-primary';\r\n    btn.textContent = 'Получить адрес';\r\n    btn.style.marginTop = '6px';\r\n\r\n    btn.addEventListener('click', async () => {\r\n      const inn = frappe.web_form.get_value(FIELDS.inn) || '';\r\n      if (!inn) {\r\n        frappe.msgprint({ message: 'Сначала заполните ИНН.', indicator: 'red' });\r\n        return;\r\n      }\r\n      try {\r\n        const { message } = await frappe.call({\r\n          method: METHOD,\r\n          args: { key: 'get_address', query: inn }\r\n        });\r\n        const address = typeof message === 'string' ? message : '';\r\n        if (address) {\r\n          frappe.web_form.set_value(FIELDS.address, address);\r\n          alert(address); // по ТЗ\r\n          frappe.show_alert({ message: 'Адрес получен и подставлен', indicator: 'green' });\r\n        } else {\r\n          frappe.msgprint({ message: 'Адрес не найден', indicator: 'orange' });\r\n        }\r\n      } catch (err) {\r\n        console.error('address error', err);\r\n        frappe.msgprint({ message: 'Ошибка при получении адреса', indicator: 'red' });\r\n      }\r\n    });\r\n\r\n    inputBox.appendChild(btn);\r\n  })();\r\n};",
  "condition_json": "{\"filters\":[]}",
  "custom_css": null,
  "doc_type": "Client",
  "docstatus": 0,
  "doctype": "Web Form",
  "hide_footer": 0,
  "hide_navbar": 0,
  "introduction_text": null,
  "is_standard": 0,
  "list_columns": [],
  "list_title": null,
  "login_required": 0,
  "max_attachment_size": 0,
  "meta_description": null,
  "meta_image": null,
  "meta_title": null,
  "modified": "2025-08-11 09:35:49.246044",
  "module": "Test Task",
  "name": "clientform",
  "print_format": null,
  "published": 1,
  "route": "clientform",
  "show_attachments": 0,
  "show_list": 0,
  "show_sidebar": 0,
  "success_message": null,
  "success_title": null,
  "success_url": null,
  "title": "ClientForm",
  "web_form_fields": [
   {
    "allow_read_on_all_link_options": 0,
    "default": null,
    "depends_on": null,
    "description": null,
    "fieldname": "section_break_zgob",
    "fieldtype": "Section Break",
    "hidden": 0,
    "label": "Форма клиента",
    "mandatory_depends_on": null,
    "max_length": 0,
    "max_value": 0,
    "options": null,
    "precision": "",
    "read_only": 0,
    "read_only_depends_on": null,
    "reqd": 0,
    "show_in_filter": 0
   },
   {
    "allow_read_on_all_link_options": 0,
    "default": null,
    "depends_on": null,
    "description": null,
    "fieldname": "designation",
    "fieldtype": "Data",
    "hidden": 0,
    "label": "Наименование:",
    "mandatory_depends_on": null,
    "max_length": 0,
    "max_value": 0,
    "options": null,
    "precision": "",
    "read_only": 0,
    "read_only_depends_on": null,
    "reqd": 0,
    "show_in_filter": 0
   },
   {
    "allow_read_on_all_link_options": 0,
    "default": null,
    "depends_on": null,
    "description": null,
    "fieldname": "inn",
    "fieldtype": "Data",
    "hidden": 0,
    "label": "ИНН:",
    "mandatory_depends_on": null,
    "max_length": 0,
    "max_value": 0,
    "options": null,
    "precision": "",
    "read_only": 0,
    "read_only_depends_on": null,
    "reqd": 0,
    "show_in_filter": 0
   },
   {
    "allow_read_on_all_link_options": 0,
    "default": null,
    "depends_on": null,
    "description": null,
    "fieldname": "kpp",
    "fieldtype": "Data",
    "hidden": 0,
    "label": "КПП:",
    "mandatory_depends_on": null,
    "max_length": 0,
    "max_value": 0,
    "options": null,
    "precision": "",
    "read_only": 0,
    "read_only_depends_on": null,
    "reqd": 0,
    "show_in_filter": 0
   },
   {
    "allow_read_on_all_link_options": 0,
    "default": null,
    "depends_on": null,
    "description": null,
    "fieldname": "address",
    "fieldtype": "Data",
    "hidden": 0,
    "label": "Адрес:",
    "mandatory_depends_on": null,
    "max_length": 0,
    "max_value": 0,
    "options": null,
    "precision": "",
    "read_only": 0,
    "read_only_depends_on": null,
    "reqd": 0,
    "show_in_filter": 0
   }
  ],
  "website_sidebar": null
 }
]